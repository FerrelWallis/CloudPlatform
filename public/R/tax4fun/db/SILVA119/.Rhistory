referenceData$KEGGBacArchTaxInformationMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayInformationKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArch.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArch.RData",sep=""))
referenceData$PathwayInformationKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGKOInformation.RData",sep=""))
referenceData$KEGGKOInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformation.RData",sep=""))
referenceData$KEGGBacArchTaxInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchCopyNumbers.RData",sep=""))
referenceData$KEGGBacArchCopyNumbers <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDALong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDALong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDAShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDAShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCLong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCLong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaToKEGGMappingMat.RData",sep=""))
referenceData$SilvaToKEGGMappingMat <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaIDs.RData",sep=""))
referenceData$SilvaIDs <- tmpReferenceData
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/")
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA115/")
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA115/")
outputTax4Fun115$FTU
outputTax4Fun119$FTU
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/")
folder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/"
pathReferenceData <- folder
referenceData <- list()
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
referenceData$KEGGBacArchTaxInformationMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayInformationKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArch.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArch.RData",sep=""))
referenceData$PathwayInformationKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGKOInformation.RData",sep=""))
referenceData$KEGGKOInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformation.RData",sep=""))
referenceData$KEGGBacArchTaxInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchCopyNumbers.RData",sep=""))
referenceData$KEGGBacArchCopyNumbers <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDALong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDALong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDAShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDAShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCLong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCLong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaToKEGGMappingMat.RData",sep=""))
referenceData$SilvaToKEGGMappingMat <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaIDs.RData",sep=""))
referenceData$SilvaIDs <- tmpReferenceData
folder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/"
pathReferenceData <- folder
referenceData <- list()
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
referenceData$KEGGBacArchTaxInformationMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayInformationKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArch.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArch.RData",sep=""))
referenceData$PathwayInformationKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGKOInformation.RData",sep=""))
referenceData$KEGGKOInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformation.RData",sep=""))
referenceData$KEGGBacArchTaxInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchCopyNumbers.RData",sep=""))
referenceData$KEGGBacArchCopyNumbers <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDALong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDALong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDAShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDAShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCLong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCLong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaToKEGGMappingMat.RData",sep=""))
referenceData$SilvaToKEGGMappingMat <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaIDs.RData",sep=""))
referenceData$SilvaIDs <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
pathReferenceData
#inputFolder <- "C:/Users/Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-05/"
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
SilvaToKEGGMappingMat <- Matrix(as.matrix(SilvaToKEGGMappingMat), sparse=TRUE)
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
for(i in 1:67164){
SilvaIDs[i,] <- paste(SilvaIDs[i,],";",sep="")
SilvaIDs[i,] <- gsub("uncultured archaeon;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured organism;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured bacterium;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured crenarchaeote;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured euryarchaeote;","",SilvaIDs[i,])
}
save(SilvaToKEGGMappingMat,file="SilvaToKEGGMappingMat.RData")
prompt(SilvaToKEGGMappingMat)
save(SilvaIDs,file="SilvaIDs.RData")
prompt(SilvaIDs)
#### Informations about KEGG organisms (as of Oct 2012)
KEGGBacArchCopyNumbers <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BACopyNumber.csv",sep=""), header=FALSE)
KEGGBacArchTaxInformation <- read.csv(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAOrganismInformation.csv",sep=""),sep="\t",header=FALSE,fill=TRUE)
TaxInfoColNames <- c("Definition","OrgCode","DataSource","TaxonomyID","SuperkingdomID","PhylumID","ClassID","OrderID","FamilyID","GenusID","SpeciesID","SubspeciesID","Superkingdom","Phylum","Class","Order","Family","Genus","Species","Subspecies")
selKEGGBacArchTaxInformation <- KEGGBacArchTaxInformation[,1:20]
colnames(selKEGGBacArchTaxInformation)<-TaxInfoColNames
rownames(selKEGGBacArchTaxInformation) <- KEGGBacArchTaxInformation[,2]
KEGGBacArchTaxInformation <- selKEGGBacArchTaxInformation
#### Functional reference profiles
### Informations about KEGG Orthologs (as of Oct 2012)
KEGGKOInformation <- read.table(paste(inputFolder,"KOInfo_BacArch_Okt2012_2014-08-12.csv",sep=""), header=FALSE, sep=";",blank.lines.skip=F,quote="")
### UProC
## short read mode
FctAbundancesKEGGBacArchUProCShort <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
## long read mode
FctAbundancesKEGGBacArchUProCLong <- read.table(paste(inputFolder,"UProC/longReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
getwd()
#inputFolder <- "C:/Users/Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-05/"
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
SilvaToKEGGMappingMat <- Matrix(as.matrix(SilvaToKEGGMappingMat), sparse=TRUE)
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
for(i in 1:67164){
SilvaIDs[i,] <- paste(SilvaIDs[i,],";",sep="")
SilvaIDs[i,] <- gsub("uncultured archaeon;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured organism;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured bacterium;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured crenarchaeote;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured euryarchaeote;","",SilvaIDs[i,])
}
save(SilvaToKEGGMappingMat,file="SilvaToKEGGMappingMat.RData")
prompt(SilvaToKEGGMappingMat)
save(SilvaIDs,file="SilvaIDs.RData")
prompt(SilvaIDs)
#### Informations about KEGG organisms (as of Oct 2012)
KEGGBacArchCopyNumbers <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BACopyNumber.csv",sep=""), header=FALSE)
KEGGBacArchTaxInformation <- read.csv(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAOrganismInformation.csv",sep=""),sep="\t",header=FALSE,fill=TRUE)
TaxInfoColNames <- c("Definition","OrgCode","DataSource","TaxonomyID","SuperkingdomID","PhylumID","ClassID","OrderID","FamilyID","GenusID","SpeciesID","SubspeciesID","Superkingdom","Phylum","Class","Order","Family","Genus","Species","Subspecies")
selKEGGBacArchTaxInformation <- KEGGBacArchTaxInformation[,1:20]
colnames(selKEGGBacArchTaxInformation)<-TaxInfoColNames
rownames(selKEGGBacArchTaxInformation) <- KEGGBacArchTaxInformation[,2]
KEGGBacArchTaxInformation <- selKEGGBacArchTaxInformation
#### Functional reference profiles
### Informations about KEGG Orthologs (as of Oct 2012)
KEGGKOInformation <- read.table(paste(inputFolder,"KOInfo_BacArch_Okt2012_2014-08-12.csv",sep=""), header=FALSE, sep=";",blank.lines.skip=F,quote="")
### UProC
## short read mode
FctAbundancesKEGGBacArchUProCShort <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
## long read mode
FctAbundancesKEGGBacArchUProCLong <- read.table(paste(inputFolder,"UProC/longReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
### PAUDA
## short read mode
FctAbundancesKEGGBacArchPAUDAShort <- read.table(paste(inputFolder,"PAUDA/shortReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
## long read mode
FctAbundancesKEGGBacArchPAUDALong <- read.table(paste(inputFolder,"PAUDA/longReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
#### Metabolic reference profiles (Tax4Fun)
PathwayAbundancesKEGGBacArch <- read.table(paste(inputFolder,"MetabolicProfiles/KEGGOkt2012BAPathwayAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
PathwayInformationKEGGBacArch <- read.table(paste(inputFolder,"MetabolicProfiles/KEGGOkt2012BAPathwayInformation.csv",sep=""), header=FALSE, sep="\t")
PathwayInformationKEGGBacArch <- PathwayInformationKEGGBacArch[,c(3,4,6,8)]
colnames(PathwayAbundancesKEGGBacArch) <- KEGGBacArchTaxInformation[,2]
rownames(PathwayAbundancesKEGGBacArch) <- PathwayInformationKEGGBacArch[,1]
#### Make matrixes sparse
FctAbundancesKEGGBacArchUProCShort <- Matrix(as.matrix(FctAbundancesKEGGBacArchUProCShort),sparse=TRUE)
FctAbundancesKEGGBacArchUProCLong <- Matrix(as.matrix(FctAbundancesKEGGBacArchUProCLong),sparse=TRUE)
FctAbundancesKEGGBacArchPAUDAShort <- Matrix(as.matrix(FctAbundancesKEGGBacArchPAUDAShort),sparse=TRUE)
FctAbundancesKEGGBacArchPAUDALong <- Matrix(as.matrix(FctAbundancesKEGGBacArchPAUDALong),sparse=TRUE)
PathwayAbundancesKEGGBacArch <- Matrix(as.matrix(PathwayAbundancesKEGGBacArch),sparse=TRUE)
#### Save data
## KEGG
save(KEGGBacArchCopyNumbers,file="KEGGBacArchCopyNumbers.RData")
prompt(KEGGBacArchCopyNumbers)
save(KEGGBacArchTaxInformation,file="KEGGBacArchTaxInformation.RData")
prompt(KEGGBacArchTaxInformation)
save(KEGGKOInformation,file="KEGGKOInformation.RData")
prompt(KEGGKOInformation)
## UProC fct profiles
save(FctAbundancesKEGGBacArchUProCShort,file="FctAbundancesKEGGBacArchUProCShort.RData")
prompt(FctAbundancesKEGGBacArchUProCShort)
save(FctAbundancesKEGGBacArchUProCLong,file="FctAbundancesKEGGBacArchUProCLong.RData")
prompt(FctAbundancesKEGGBacArchUProCLong)
## PAUDA fct profiles
save(FctAbundancesKEGGBacArchPAUDAShort,file="FctAbundancesKEGGBacArchPAUDAShort.RData")
prompt(FctAbundancesKEGGBacArchPAUDAShort)
save(FctAbundancesKEGGBacArchPAUDALong,file="FctAbundancesKEGGBacArchPAUDALong.RData")
prompt(FctAbundancesKEGGBacArchPAUDALong)
## met profiles
save(PathwayAbundancesKEGGBacArch,file="PathwayAbundancesKEGGBacArch.RData")
prompt(PathwayAbundancesKEGGBacArch)
save(PathwayInformationKEGGBacArch,file="PathwayInformationKEGGBacArch.RData")
prompt(PathwayInformationKEGGBacArch)
#### Metabolic reference profiles (MoP-Pro)
PathwayAbundancesKEGGBacArchMoPPro <- read.table(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAPathwayAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
PathwayInformationKEGGBacArchMoPPro <- read.table(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAPathwayInformation.csv",sep=""), header=FALSE, sep="\t")
PathwayInformationKEGGBacArchMoPPro <- PathwayInformationKEGGBacArchMoPPro[,c(3,4,6,8)]
colnames(PathwayAbundancesKEGGBacArchMoPPro) <- KEGGBacArchTaxInformationMoPPro[,2]
rownames(PathwayAbundancesKEGGBacArchMoPPro) <- PathwayInformationKEGGBacArchMoPPro[,1]
#### Informations about KEGG organisms (as of Oct 2012)
KEGGBacArchTaxInformationMoPPro <- read.csv(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAOrganismInformation.csv",sep=""),sep="\t",header=FALSE,fill=TRUE)
TaxInfoColNames <- c("Definition","OrgCode","DataSource","TaxonomyID","SuperkingdomID","PhylumID","ClassID","OrderID","FamilyID","GenusID","SpeciesID","SubspeciesID","Superkingdom","Phylum","Class","Order","Family","Genus","Species","Subspecies")
selKEGGBacArchTaxInformationMoPPro <- KEGGBacArchTaxInformationMoPPro[,1:20]
colnames(selKEGGBacArchTaxInformationMoPPro)<-TaxInfoColNames
rownames(selKEGGBacArchTaxInformationMoPPro) <- KEGGBacArchTaxInformationMoPPro[,2]
KEGGBacArchTaxInformationMoPPro <- selKEGGBacArchTaxInformationMoPPro
## met profiles
save(PathwayAbundancesKEGGBacArchMoPPro,file="PathwayAbundancesKEGGBacArchMoPPro.RData")
prompt(PathwayAbundancesKEGGBacArchMoPPro)
save(PathwayInformationKEGGBacArchMoPPro,file="PathwayInformationKEGGBacArchMoPPro.RData")
prompt(PathwayInformationKEGGBacArchMoPPro)
save(KEGGBacArchTaxInformationMoPPro,file="KEGGBacArchTaxInformationMoPPro.RData")
prompt(KEGGBacArchTaxInformationMoPPro)
# setwd("C:/Users//Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/TestData/")
# # GN mat files (16S)
# ## single files ##
# file <- c("GNM_0.97_table.biom")
# GN16SData <- importQIIMEBiomData(file)
#
# save(GN16SData,file="GN16SData.RData")
# prompt(GN16SData)
#
# # GN mat files (Metagenome)
# files <- c("TaxyProForTax4Fun/TestInputData/4440963.3.299.screen.passed.fna_upro2_Taxy/4440963.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440964.3.299.screen.passed.fna_upro2_Taxy/4440964.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440965.3.299.screen.passed.fna_upro2_Taxy/4440965.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440966.3.299.screen.passed.fna_upro2_Taxy/4440966.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440967.3.299.screen.passed.fna_upro2_Taxy/4440967.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440968.3.299.screen.passed.fna_upro2_Taxy/4440968.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440969.3.299.screen.passed.fna_upro2_Taxy/4440969.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440970.3.299.screen.passed.fna_upro2_Taxy/4440970.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440971.3.299.screen.passed.fna_upro2_Taxy/4440971.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440972.3.299.screen.passed.fna_upro2_Taxy/4440972.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv")
# GNMetagenomeData <- importTaxyProData(files)
#
# save(GNMetagenomeData,file="GNMetagenomeData.RData")
# prompt(GNMetagenomeData)
folder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/"
pathReferenceData <- folder
referenceData <- list()
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
referenceData$KEGGBacArchTaxInformationMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayInformationKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArch.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArch.RData",sep=""))
referenceData$PathwayInformationKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGKOInformation.RData",sep=""))
referenceData$KEGGKOInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformation.RData",sep=""))
referenceData$KEGGBacArchTaxInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchCopyNumbers.RData",sep=""))
referenceData$KEGGBacArchCopyNumbers <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDALong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDALong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDAShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDAShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCLong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCLong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaToKEGGMappingMat.RData",sep=""))
referenceData$SilvaToKEGGMappingMat <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaIDs.RData",sep=""))
referenceData$SilvaIDs <- tmpReferenceData
# prompt(GNMetagenomeData)
#inputFolder <- "C:/Users/Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-05/"
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
SilvaToKEGGMappingMat <- Matrix(as.matrix(SilvaToKEGGMappingMat), sparse=TRUE)
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
for(i in 1:67164){
SilvaIDs[i,] <- paste(SilvaIDs[i,],";",sep="")
SilvaIDs[i,] <- gsub("uncultured archaeon;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured organism;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured bacterium;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured crenarchaeote;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured euryarchaeote;","",SilvaIDs[i,])
}
saveRDS(SilvaToKEGGMappingMat,file="SilvaToKEGGMappingMat.RData")
prompt(SilvaToKEGGMappingMat)
saveRDS(SilvaIDs,file="SilvaIDs.RData")
prompt(SilvaIDs)
#### Informations about KEGG organisms (as of Oct 2012)
KEGGBacArchCopyNumbers <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BACopyNumber.csv",sep=""), header=FALSE)
KEGGBacArchTaxInformation <- read.csv(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAOrganismInformation.csv",sep=""),sep="\t",header=FALSE,fill=TRUE)
TaxInfoColNames <- c("Definition","OrgCode","DataSource","TaxonomyID","SuperkingdomID","PhylumID","ClassID","OrderID","FamilyID","GenusID","SpeciesID","SubspeciesID","Superkingdom","Phylum","Class","Order","Family","Genus","Species","Subspecies")
selKEGGBacArchTaxInformation <- KEGGBacArchTaxInformation[,1:20]
colnames(selKEGGBacArchTaxInformation)<-TaxInfoColNames
rownames(selKEGGBacArchTaxInformation) <- KEGGBacArchTaxInformation[,2]
KEGGBacArchTaxInformation <- selKEGGBacArchTaxInformation
#### Functional reference profiles
### Informations about KEGG Orthologs (as of Oct 2012)
KEGGKOInformation <- read.table(paste(inputFolder,"KOInfo_BacArch_Okt2012_2014-08-12.csv",sep=""), header=FALSE, sep=";",blank.lines.skip=F,quote="")
### UProC
## short read mode
FctAbundancesKEGGBacArchUProCShort <- read.table(paste(inputFolder,"UProC/shortReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
## long read mode
FctAbundancesKEGGBacArchUProCLong <- read.table(paste(inputFolder,"UProC/longReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
### PAUDA
## short read mode
FctAbundancesKEGGBacArchPAUDAShort <- read.table(paste(inputFolder,"PAUDA/shortReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
## long read mode
FctAbundancesKEGGBacArchPAUDALong <- read.table(paste(inputFolder,"PAUDA/longReadMode/KEGGOkt2012BAUprocAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
#### Metabolic reference profiles (Tax4Fun)
PathwayAbundancesKEGGBacArch <- read.table(paste(inputFolder,"MetabolicProfiles/KEGGOkt2012BAPathwayAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
PathwayInformationKEGGBacArch <- read.table(paste(inputFolder,"MetabolicProfiles/KEGGOkt2012BAPathwayInformation.csv",sep=""), header=FALSE, sep="\t")
PathwayInformationKEGGBacArch <- PathwayInformationKEGGBacArch[,c(3,4,6,8)]
colnames(PathwayAbundancesKEGGBacArch) <- KEGGBacArchTaxInformation[,2]
rownames(PathwayAbundancesKEGGBacArch) <- PathwayInformationKEGGBacArch[,1]
#### Make matrixes sparse
FctAbundancesKEGGBacArchUProCShort <- Matrix(as.matrix(FctAbundancesKEGGBacArchUProCShort),sparse=TRUE)
FctAbundancesKEGGBacArchUProCLong <- Matrix(as.matrix(FctAbundancesKEGGBacArchUProCLong),sparse=TRUE)
FctAbundancesKEGGBacArchPAUDAShort <- Matrix(as.matrix(FctAbundancesKEGGBacArchPAUDAShort),sparse=TRUE)
FctAbundancesKEGGBacArchPAUDALong <- Matrix(as.matrix(FctAbundancesKEGGBacArchPAUDALong),sparse=TRUE)
PathwayAbundancesKEGGBacArch <- Matrix(as.matrix(PathwayAbundancesKEGGBacArch),sparse=TRUE)
#### Save data
## KEGG
saveRDS(KEGGBacArchCopyNumbers,file="KEGGBacArchCopyNumbers.RData")
prompt(KEGGBacArchCopyNumbers)
saveRDS(KEGGBacArchTaxInformation,file="KEGGBacArchTaxInformation.RData")
prompt(KEGGBacArchTaxInformation)
saveRDS(KEGGKOInformation,file="KEGGKOInformation.RData")
prompt(KEGGKOInformation)
## UProC fct profiles
saveRDS(FctAbundancesKEGGBacArchUProCShort,file="FctAbundancesKEGGBacArchUProCShort.RData")
prompt(FctAbundancesKEGGBacArchUProCShort)
saveRDS(FctAbundancesKEGGBacArchUProCLong,file="FctAbundancesKEGGBacArchUProCLong.RData")
prompt(FctAbundancesKEGGBacArchUProCLong)
## PAUDA fct profiles
saveRDS(FctAbundancesKEGGBacArchPAUDAShort,file="FctAbundancesKEGGBacArchPAUDAShort.RData")
prompt(FctAbundancesKEGGBacArchPAUDAShort)
saveRDS(FctAbundancesKEGGBacArchPAUDALong,file="FctAbundancesKEGGBacArchPAUDALong.RData")
prompt(FctAbundancesKEGGBacArchPAUDALong)
## met profiles
saveRDS(PathwayAbundancesKEGGBacArch,file="PathwayAbundancesKEGGBacArch.RData")
prompt(PathwayAbundancesKEGGBacArch)
saveRDS(PathwayInformationKEGGBacArch,file="PathwayInformationKEGGBacArch.RData")
prompt(PathwayInformationKEGGBacArch)
#### Metabolic reference profiles (MoP-Pro)
PathwayAbundancesKEGGBacArchMoPPro <- read.table(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAPathwayAbundances.csv",sep=""), header=FALSE, sep=",",dec=".")
PathwayInformationKEGGBacArchMoPPro <- read.table(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAPathwayInformation.csv",sep=""), header=FALSE, sep="\t")
PathwayInformationKEGGBacArchMoPPro <- PathwayInformationKEGGBacArchMoPPro[,c(3,4,6,8)]
colnames(PathwayAbundancesKEGGBacArchMoPPro) <- KEGGBacArchTaxInformationMoPPro[,2]
rownames(PathwayAbundancesKEGGBacArchMoPPro) <- PathwayInformationKEGGBacArchMoPPro[,1]
#### Informations about KEGG organisms (as of Oct 2012)
KEGGBacArchTaxInformationMoPPro <- read.csv(paste(inputFolder,"MetabolicProfiles_MoPPro/KEGGOkt2012BAOrganismInformation.csv",sep=""),sep="\t",header=FALSE,fill=TRUE)
TaxInfoColNames <- c("Definition","OrgCode","DataSource","TaxonomyID","SuperkingdomID","PhylumID","ClassID","OrderID","FamilyID","GenusID","SpeciesID","SubspeciesID","Superkingdom","Phylum","Class","Order","Family","Genus","Species","Subspecies")
selKEGGBacArchTaxInformationMoPPro <- KEGGBacArchTaxInformationMoPPro[,1:20]
colnames(selKEGGBacArchTaxInformationMoPPro)<-TaxInfoColNames
rownames(selKEGGBacArchTaxInformationMoPPro) <- KEGGBacArchTaxInformationMoPPro[,2]
KEGGBacArchTaxInformationMoPPro <- selKEGGBacArchTaxInformationMoPPro
## met profiles
saveRDS(PathwayAbundancesKEGGBacArchMoPPro,file="PathwayAbundancesKEGGBacArchMoPPro.RData")
prompt(PathwayAbundancesKEGGBacArchMoPPro)
saveRDS(PathwayInformationKEGGBacArchMoPPro,file="PathwayInformationKEGGBacArchMoPPro.RData")
prompt(PathwayInformationKEGGBacArchMoPPro)
saveRDS(KEGGBacArchTaxInformationMoPPro,file="KEGGBacArchTaxInformationMoPPro.RData")
prompt(KEGGBacArchTaxInformationMoPPro)
# setwd("C:/Users//Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/TestData/")
# # GN mat files (16S)
# ## single files ##
# file <- c("GNM_0.97_table.biom")
# GN16SData <- importQIIMEBiomData(file)
#
# save(GN16SData,file="GN16SData.RData")
# prompt(GN16SData)
#
# # GN mat files (Metagenome)
# files <- c("TaxyProForTax4Fun/TestInputData/4440963.3.299.screen.passed.fna_upro2_Taxy/4440963.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440964.3.299.screen.passed.fna_upro2_Taxy/4440964.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440965.3.299.screen.passed.fna_upro2_Taxy/4440965.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440966.3.299.screen.passed.fna_upro2_Taxy/4440966.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440967.3.299.screen.passed.fna_upro2_Taxy/4440967.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440968.3.299.screen.passed.fna_upro2_Taxy/4440968.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440969.3.299.screen.passed.fna_upro2_Taxy/4440969.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440970.3.299.screen.passed.fna_upro2_Taxy/4440970.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440971.3.299.screen.passed.fna_upro2_Taxy/4440971.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv",
#            "TaxyProForTax4Fun/TestInputData/4440972.3.299.screen.passed.fna_upro2_Taxy/4440972.3.299.screen.passed.fna_upro2_speciesID_MoPPro.csv")
# GNMetagenomeData <- importTaxyProData(files)
#
# save(GNMetagenomeData,file="GNMetagenomeData.RData")
# prompt(GNMetagenomeData)
#inputFolder <- "C:/Users/Kathrin/Documents/Promotion/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-05/"
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
folder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/"
pathReferenceData <- folder
referenceData <- list()
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformationMoPPro.RData",sep=""))
referenceData$KEGGBacArchTaxInformationMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArchMoPPro.RData",sep=""))
referenceData$PathwayInformationKEGGBacArchMoPPro <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayAbundancesKEGGBacArch.RData",sep=""))
referenceData$PathwayAbundancesKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"PathwayInformationKEGGBacArch.RData",sep=""))
referenceData$PathwayInformationKEGGBacArch <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGKOInformation.RData",sep=""))
referenceData$KEGGKOInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchTaxInformation.RData",sep=""))
referenceData$KEGGBacArchTaxInformation <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"KEGGBacArchCopyNumbers.RData",sep=""))
referenceData$KEGGBacArchCopyNumbers <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDALong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDALong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchPAUDAShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchPAUDAShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCLong.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCLong <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"FctAbundancesKEGGBacArchUProCShort.RData",sep=""))
referenceData$FctAbundancesKEGGBacArchUProCShort <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaToKEGGMappingMat.RData",sep=""))
referenceData$SilvaToKEGGMappingMat <- tmpReferenceData
tmpReferenceData <- readRDS(paste(pathReferenceData,"SilvaIDs.RData",sep=""))
referenceData$SilvaIDs <- tmpReferenceData
library(Tax4Fun)
help(Tax4Fun)
outputTax4Fun115 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA115/")
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/")
outputTax4Fun115$FTU
outputTax4Fun119$FTU
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",normCopyNo = FALSE)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",shortReadMode = FALSE)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",refProfile = "PAUDA",shortReadMode = FALSE)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",refProfile = "PAUDA",shortReadMode = FALSE,fctProfiling = FALSE)
print(outputTax4Fun119)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",refProfile = "PAUDA",shortReadMode = FALSE, normCopyNo = TRUE)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",refProfile = "PAUDA",shortReadMode = FALSE, normCopyNo = FALSE)
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
head(SilvaIDs)
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE,,quote="")
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
SilvaToKEGGMappingMat <- Matrix(as.matrix(SilvaToKEGGMappingMat), sparse=TRUE)
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
#for(i in 1:67164){
for(i in 1:77205){
SilvaIDs[i,] <- paste(SilvaIDs[i,],";",sep="")
SilvaIDs[i,] <- gsub("uncultured archaeon;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured organism;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured bacterium;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured crenarchaeote;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured euryarchaeote;","",SilvaIDs[i,])
}
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
setwd("/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/Tax4Fun_Data_Sept2014/SILVA119/")
inputFolder <- "/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/RPackageWindows/RInput_2014-09_SILVA119/"
library(Matrix)
#### Mapping Silva to KEGG
#SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE,nrows=67164)
SilvaToKEGGMappingMat <- read.table(paste(inputFolder, "UProC/shortReadMode/SilvaToKEGGMapppingMat.csv",sep=""), sep=",",header=FALSE)
SilvaToKEGGMappingMat <- Matrix(as.matrix(SilvaToKEGGMappingMat), sparse=TRUE)
#SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, nrows=67164,quote="")
SilvaIDs <- read.table(paste(inputFolder,"UProC/shortReadMode/SilvaIDs.csv",sep=""),sep="\t",header=FALSE,as.is=TRUE, quote="")
#for(i in 1:67164){
for(i in 1:77205){
SilvaIDs[i,] <- paste(SilvaIDs[i,],";",sep="")
SilvaIDs[i,] <- gsub("uncultured archaeon;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured organism;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured bacterium;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured crenarchaeote;","",SilvaIDs[i,])
SilvaIDs[i,] <- gsub("uncultured euryarchaeote;","",SilvaIDs[i,])
}
saveRDS(SilvaToKEGGMappingMat,file="SilvaToKEGGMappingMat.RData")
prompt(SilvaToKEGGMappingMat)
saveRDS(SilvaIDs,file="SilvaIDs.RData")
prompt(SilvaIDs)
outputTax4Fun119 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/",refProfile = "PAUDA",shortReadMode = FALSE, normCopyNo = TRUE)
outputTax4Fun115 <- Tax4Fun(GN16SData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA115/",refProfile = "PAUDA",shortReadMode = FALSE, normCopyNo = TRUE)
outputTax4Fun115$FTU
outputTax4Fun119$FTU
outputMoPPro115 <- MoPPro(GNMetagenomeData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA115/")
outputMoPPro119 <- MoPPro(GNMetagenomeData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119/")
outputMoPPro119 <- MoPPro(GNMetagenomeData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119")
outputMoPPro119 <- MoPPro(GNMetagenomeData,"/home/kathrin/Dokumente/Paper/BioinformaticsMoP16S_2014/TestTax4Fun/SILVA119//")
