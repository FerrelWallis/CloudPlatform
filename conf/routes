
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#过滤器避开
GET           /                                                      controllers.HomeController.index
GET           /CloudPlatform                                         controllers.HomeController.home2
GET           /CloudPlatform/home                                    controllers.HomeController.home
GET           /CloudPlatform/home/allsoft                            controllers.HomeController.allsoft(types:String)
GET           /CloudPlatform/home/updateNews                         controllers.HomeController.updatenews

GET           /CloudPlatform/PersonalCenter                          controllers.HomeController.personal
GET           /CloudPlatform/myTask                                  controllers.HomeController.mytask
GET           /CloudPlatform/managerPanel                            controllers.HomeController.manager
GET           /CloudPlatform/NoticeList                              controllers.HomeController.notelist
GET           /CloudPlatform/feedback                                controllers.HomeController.feedback

GET           /CloudPlatform/SoftPage/:abbre                         controllers.SoftController.softPage(abbre:String)
GET           /CloudPlatform/Mytask/taskPreview/:abbre               controllers.SoftController.previewPage(abbre:String, taskname:String)

GET           /CloudPlatform/Softwares/home/latest                   controllers.SoftController.getlatestSix
GET           /CloudPlatform/Softwares/home/hotest                   controllers.SoftController.gethotestSix
GET           /CloudPlatform/Softwares/home/alllist                  controllers.SoftController.getAllSoft
GET           /CloudPlatform/Softwares/home/types                    controllers.SoftController.getTypes(types:String)
GET           /CloudPlatform/Softwares/home/search                   controllers.SoftController.getSearch(search:String)
GET           /CloudPlatform/Softwares/home/likelist                 controllers.SoftController.getLike
GET           /CloudPlatform/Softwares/home/likebref                 controllers.SoftController.getLikebrief

#Cluster
POST          /CloudPlatform/SoftTool/runSoft                        controllers.RService.runSoft(abbre:String, sname:String)
POST          /CloudPlatform/SoftTool/getParams                      controllers.RService.getParams(taskname:String,abbre:String)
POST          /CloudPlatform/SoftTool/reDrawRun                      controllers.RService.reDrawRun(taskname:String,abbre:String)

POST          /CloudPlatform/SoftTool/runPcoa                        controllers.RClusterController.doPCOA(isgroup:Boolean,table:String,group:String)
POST          /CloudPlatform/SoftTool/getPcoaData                    controllers.RClusterController.readPCAData(taskname:String,abbre:String)
POST          /CloudPlatform/SoftTool/redrawPcoa                     controllers.RClusterController.redrawPCA(taskname:String,abbre:String)

POST          /CloudPlatform/SoftTool/runCCA                         controllers.RClusterController.doCCA(isgroup:Boolean)
POST          /CloudPlatform/SoftTool/getCCAData                     controllers.RClusterController.readCCAData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawCCA                      controllers.RClusterController.redrawCCA(taskname:String,showsname:Boolean,showevi:Boolean,showspeci:Boolean)

POST          /CloudPlatform/SoftTool/runNMD                         controllers.RClusterController.doNmds(isgroup:Boolean)
POST          /CloudPlatform/SoftTool/getNMDData                     controllers.RClusterController.readNmdsData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawNMD                      controllers.RClusterController.redrawNmds(taskname:String)

POST          /CloudPlatform/SoftTool/runPCA3                        controllers.RClusterController.do3DPCA(isgroup:Boolean)
POST          /CloudPlatform/SoftTool/getPCA3Data                    controllers.RClusterController.read3DPCAData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawPCA3                     controllers.RClusterController.redraw3DPCA(taskname:String)

POST          /CloudPlatform/SoftTool/runRF                          controllers.RClusterController.doRF
POST          /CloudPlatform/SoftTool/getRFData                      controllers.RClusterController.readRFData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawRF                       controllers.RClusterController.redrawRF(taskname:String)


#Function
POST          /CloudPlatform/SoftTool/runGo                          controllers.RFunctionController.doGo(types:String,refer:String,table:String)
POST          /CloudPlatform/SoftTool/getGOData                      controllers.RFunctionController.readGoData(types:String,taskname:String)
POST          /CloudPlatform/SoftTool/redrawGO                       controllers.RFunctionController.redrawGO(taskname:String,types:String)

POST          /CloudPlatform/SoftTool/runTax4Fun                     controllers.RFunctionController.doTax4Fun
POST          /CloudPlatform/SoftTool/getTAX4Fun                     controllers.RFunctionController.readTax4Fun(taskname:String)

POST          /CloudPlatform/SoftTool/runLefse                       controllers.RFunctionController.doLefse
POST          /CloudPlatform/SoftTool/getLefse                       controllers.RFunctionController.readLefse(taskname:String)

POST          /CloudPlatform/SoftTool/runLefse2                      controllers.RFunctionController.doLefse2
POST          /CloudPlatform/SoftTool/getLefse2                      controllers.RFunctionController.readLefse2(taskname:String)
POST          /CloudPlatform/SoftTool/redrawLefRes                   controllers.RFunctionController.redrawLefRes(taskname:String)
POST          /CloudPlatform/SoftTool/redrawLefCla                   controllers.RFunctionController.redrawLefCla(taskname:String)
POST          /CloudPlatform/SoftTool/redrawLefFea                   controllers.RFunctionController.redrawLefFea(taskname:String)



#Paint
POST          /CloudPlatform/SoftTool/runBoxplot                     controllers.RPaintController.doBoxplot
POST          /CloudPlatform/SoftTool/getBoxData                     controllers.RPaintController.readBoxData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawBox                      controllers.RPaintController.redrawBox(taskname:String)

POST          /CloudPlatform/SoftTool/runHeatmap                     controllers.RPaintController.doHeatmap(isgroupr:Boolean,isgroupc:Boolean,istag:Boolean)
POST          /CloudPlatform/SoftTool/getHeatData                    controllers.RPaintController.readHeatData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawHeat                     controllers.RPaintController.redrawHeatmap(taskname:String,rtree:String,ctree:String,xfs:String,yfs:String,sc:String,xfa:String,fn:String)

POST          /CloudPlatform/SoftTool/runNet                         controllers.RPaintController.doNet
POST          /CloudPlatform/SoftTool/getNetData                     controllers.RPaintController.readNetData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawNet                      controllers.RPaintController.redrawNet(taskname:String)

POST          /CloudPlatform/SoftTool/getJvennData                   controllers.RPaintController.getJvennData
POST          /CloudPlatform/SoftTool/getJvennData2                  controllers.RPaintController.getJvennData2

POST          /CloudPlatform/SoftTool/runBar                         controllers.RPaintController.doBar(isgroup:Boolean)
POST          /CloudPlatform/SoftTool/getBarGroupData                controllers.RPaintController.readBarData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawBar                      controllers.RPaintController.redrawBar(taskname:String)

POST          /CloudPlatform/SoftTool/runAbiview                     controllers.RPaintController.doAbiview
POST          /CloudPlatform/SoftTool/getAbiData                     controllers.RPaintController.readAbiview(taskname:String)
POST          /CloudPlatform/SoftTool/redrawAbiview                  controllers.RPaintController.redrawAbiview(taskname:String)

POST          /CloudPlatform/SoftTool/runVolcano                     controllers.RPaintController.doVolcano
POST          /CloudPlatform/SoftTool/getVolcanoData                 controllers.RPaintController.readVolcanoData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawVolcano                  controllers.RPaintController.redrawVolcano(taskname:String)

POST          /CloudPlatform/SoftTool/runManhattan                   controllers.RPaintController.doManhattan(samnum:Int,sam:String)
POST          /CloudPlatform/SoftTool/getManhattanData               controllers.RPaintController.readManhattanData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawManhattan                controllers.RPaintController.redrawManhattan(taskname:String,samnum:Int,sam:String)

POST          /CloudPlatform/SoftTool/runTreemap                     controllers.RPaintController.doTreemap(groups:String,isgroup:Boolean)
POST          /CloudPlatform/SoftTool/getTreemapData                 controllers.RPaintController.readTreemapData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawTreemap                  controllers.RPaintController.redrawTreemap(taskname:String,groups:String)

POST          /CloudPlatform/SoftTool/runViolin                      controllers.RPaintController.doViolin(isgroup:Boolean,table:String,group:String)
POST          /CloudPlatform/SoftTool/getViolinData                  controllers.RPaintController.readViolinData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawViolin                   controllers.RPaintController.redrawViolin(taskname:String)

POST          /CloudPlatform/SoftTool/runFreqHisto                   controllers.RPaintController.doFreqHisto
POST          /CloudPlatform/SoftTool/getFreqHistoData               controllers.RPaintController.readFreqHistoData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawFreqHisto                controllers.RPaintController.redrawFreqHisto(taskname:String)

POST          /CloudPlatform/SoftTool/runBreakBar                    controllers.RPaintController.doBreakBar
POST          /CloudPlatform/SoftTool/getBreakBarData                controllers.RPaintController.readBreakBarData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawBreakBar                 controllers.RPaintController.redrawBreakBar(taskname:String)

POST          /CloudPlatform/SoftTool/runPie                         controllers.RPaintController.doPie
POST          /CloudPlatform/SoftTool/getPieData                     controllers.RPaintController.readPieData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawPie                      controllers.RPaintController.redrawPie(taskname:String)

POST          /CloudPlatform/SoftTool/runEBL                         controllers.RPaintController.doEBL
POST          /CloudPlatform/SoftTool/getEBLData                     controllers.RPaintController.readEBLData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawEBL                      controllers.RPaintController.redrawEBL(taskname:String)

POST          /CloudPlatform/SoftTool/runBubble                      controllers.RPaintController.doBubble
POST          /CloudPlatform/SoftTool/getBubbleData                  controllers.RPaintController.readBubbleData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawBubble                   controllers.RPaintController.redrawBubble(taskname:String)

POST          /CloudPlatform/SoftTool/runCircos                      controllers.RPaintController.doCircos(filenum:String,l:Boolean,o:Boolean)
POST          /CloudPlatform/SoftTool/getCircosData                  controllers.RPaintController.readCircosData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawCircos                   controllers.RPaintController.redrawCircos(taskname:String,showha:Boolean)

POST          /CloudPlatform/SoftTool/runTree                        controllers.RPaintController.doTree
POST          /CloudPlatform/SoftTool/getTreeData                    controllers.RPaintController.readTreeData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawTree                     controllers.RPaintController.redrawTree(taskname:String)

POST          /CloudPlatform/SoftTool/runTernary                     controllers.RPaintController.doTernary
POST          /CloudPlatform/SoftTool/getTernaryData                 controllers.RPaintController.readTernaryData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawTernary                  controllers.RPaintController.redrawTernary(taskname:String)

POST          /CloudPlatform/SoftTool/runCCS                         controllers.RPaintController.doCCS
POST          /CloudPlatform/SoftTool/getCCS                         controllers.RPaintController.readCCS(taskname:String)
POST          /CloudPlatform/SoftTool/redrawCCS                      controllers.RPaintController.redrawCCS(taskname:String)

POST          /CloudPlatform/SoftTool/runLIN                         controllers.RPaintController.doLIN
POST          /CloudPlatform/SoftTool/getLIN                         controllers.RPaintController.readLINData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawLIN                      controllers.RPaintController.redrawLIN(taskname:String)

POST          /CloudPlatform/SoftTool/runSCA                         controllers.RPaintController.doSCA
POST          /CloudPlatform/SoftTool/getSCA                         controllers.RPaintController.readSCAData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawSCA                      controllers.RPaintController.redrawSCA(taskname:String)


#Check
POST          /CloudPlatform/SoftTool/runIGC                         controllers.RCheckController.doIGC(tablenum:Int)
POST          /CloudPlatform/SoftTool/getIGCData                     controllers.RCheckController.readIGC(taskname:String)
POST          /CloudPlatform/SoftTool/redrawIGCHeat                  controllers.RCheckController.redrawIGCHeat(taskname:String,rtree:String,ctree:String,xfs:String,yfs:String,sc:String,xfa:String,fn:String)
POST          /CloudPlatform/SoftTool/redrawIGCNet                   controllers.RCheckController.redrawIGCNet(taskname:String)

POST          /CloudPlatform/SoftTool/runTTest                       controllers.RCheckController.doTTest
POST          /CloudPlatform/SoftTool/runWilcoxon                    controllers.RCheckController.doWilcoxon
POST          /CloudPlatform/SoftTool/runKruskal                     controllers.RCheckController.doKruskal
POST          /CloudPlatform/SoftTool/runAnova                       controllers.RCheckController.doAnova

POST          /CloudPlatform/SoftTool/runPLS                         controllers.RCheckController.doPlsda
POST          /CloudPlatform/SoftTool/getPLSData                     controllers.RCheckController.readPlsdaData(taskname:String)
POST          /CloudPlatform/SoftTool/redrawPLS                      controllers.RCheckController.redrawPlsda(taskname:String)


#Sequence
POST          /CloudPlatform/SoftTool/runRevseq                      controllers.RSequenceController.doRevseq


#Chart
POST          /CloudPlatform/SoftTool/runTableTrans                  controllers.RChartController.doTableTrans
POST          /CloudPlatform/SoftTool/runMerge2Table                 controllers.RChartController.doMerge2Table
POST          /CloudPlatform/SoftTool/runMergeMulTable               controllers.RChartController.doMergeMulTable(filenum:Int)



POST          /CloudPlatform/Utils/sendMSG                           controllers.UtilsController.sendMSG(phone:String,where:String)
POST          /CloudPlatform/Utils/getAllRunning                     controllers.UtilsController.getAllRunning
POST          /CloudPlatform/Utils/updateRunning                     controllers.UtilsController.updateRunning
POST          /CloudPlatform/Utils/addFeedback                       controllers.UtilsController.addFeedback
POST          /CloudPlatform/Utils/getFeedsByUid                     controllers.UtilsController.getFeedsByUid
POST          /CloudPlatform/Utils/getFeedsByFid                     controllers.UtilsController.getFeedsByFid(fid:String,adpage:Boolean)
POST          /CloudPlatform/Utils/getAllFeeds                       controllers.UtilsController.getAllFeeds
POST          /CloudPlatform/Utils/deleteFeeds                       controllers.UtilsController.deleteFeeds(ids:String)
POST          /CloudPlatform/Utils/realDeleteFeeds                   controllers.UtilsController.realDeleteFeeds(ids:String)
POST          /CloudPlatform/Utils/checkUnReadFeed                   controllers.UtilsController.checkUnreadFeed

POST          /CloudPlatform/Utils/getFeedsMailbyFid                 controllers.UtilsController.getFeedsMailbyFid(fid:String, mid:Int)
POST          /CloudPlatform/Utils/addMail                           controllers.UtilsController.addMailbox(fid:Int, uid:Int, user:String)
POST          /CloudPlatform/Utils/getMailsByUid                     controllers.UtilsController.getMailsByUID
POST          /CloudPlatform/Utils/checkUnReadMails                  controllers.UtilsController.checkUnreadMails

POST          /CloudPlatform/Utils/insertNote                        controllers.UtilsController.insertNotice
POST          /CloudPlatform/Utils/getLateNote                       controllers.UtilsController.getLatestNotice
POST          /CloudPlatform/Utils/checkReadNote                     controllers.UtilsController.checkReadNote
POST          /CloudPlatform/Utils/getAllValidNotes                  controllers.UtilsController.getValidNotes
POST          /CloudPlatform/Utils/getNoteById                       controllers.UtilsController.getNoticeById(noteid:Int)
GET           /CloudPlatform/Utils/viewer                            controllers.UtilsController.pdfViewer
GET           /CloudPlatform/Utils/previewFile                       controllers.UtilsController.previewFile(taskname:String,filename:String,filetype:String)
POST          /CloudPlatform/Utils/readFileContent                   controllers.UtilsController.readFileContent(taskname:String,filename:String)
POST          /CloudPlatform/Utils/getFilePath                       controllers.UtilsController.getFilePath(taskname:String,filename:String)
POST          /CloudPlatform/Utils/getSoftFreq                       controllers.UtilsController.softFreq
#POST          /CloudPlatform/SoftTool/runKegg                        controllers.RService.doKegg(id:String,userefer:Boolean,desc:Boolean)

#POST          /CloudPlatform/SoftTool/runDirected                    controllers.RService.doDirected(id:String)

GET         /CloudPlatform/SoftTool/creatDownDuty                  controllers.RService.creatDownDuty(taskname:String,uid:String,num:Double)
POST          /CloudPlatform/SoftTool/getDownloadFiles               controllers.RService.getDownloadFiles(taskname:String,soft:String)
GET           /CloudPlatform/SoftTool/downloadFile                   controllers.RService.downloadFile(taskname:String,filename:String,num:Double)
GET           /CloudPlatform/SoftTool/downloadZip                    controllers.RService.downloadZip(taskname:String,num:Double)
GET           /CloudPlatform/SoftTool/download                       controllers.RService.download(taskname:String,picname:String,suffix:String,num:Double)
#GET           /CloudPlatform/SoftTool/download                       controllers.RService.download(taskname:String,filename:String)
GET           /CloudPlatform/SoftTool/downloadExamples               controllers.RService.downloadExamples(name:String)
GET           /CloudPlatform/pic                                     controllers.RService.getPic(path:String,num:Double)
GET           /CloudPlatform/pdf                                     controllers.RService.getPdf(fileUrl:String)


POST          /CloudPlatform/MyTasks/getAllDutys                     controllers.DutyController.getAllDutys
POST          /CloudPlatform/MyTasks/getDuties                       controllers.DutyController.getDuties
POST          /CloudPlatform/MyTasks/getDutys                        controllers.DutyController.getAllDutyById
POST          /CloudPlatform/MyTasks/getDutysByType                  controllers.DutyController.getDutyByType(sabbrename:String)
POST          /CloudPlatform/MyTasks/deleteDutys                     controllers.DutyController.deleteDutys(ids:String)
POST          /CloudPlatform/MyTasks/deleteDuty                      controllers.DutyController.deleteDuty(taskname:String)
#GET           /CloudPlatform/MyTasks/taskPreview                     controllers.DutyController.taskPreview(taskname:String)
POST          /CloudPlatform/MyTasks/checkTaskname                   controllers.DutyController.checktaskname
POST          /CloudPlatform/MyTasks/showlog                         controllers.DutyController.showLog(taskname:String)
POST          /CloudPlatform/MyTasks/showlogByUid                    controllers.DutyController.showLogByUid(taskname:String, uid:String)


POST          /CloudPlatform/User/signIn                             controllers.UserController.signIn
POST          /CloudPlatform/User/mailSignIn                         controllers.UserController.mailSignIn
GET           /CloudPlatform/User/signInSuccess                      controllers.UserController.signInSuccess(path:String,id:String)
POST          /CloudPlatform/User/changePassword                     controllers.UserController.changePassword
POST          /CloudPlatform/User/changePhone                        controllers.UserController.changePhone
POST          /CloudPlatform/User/changeDetail                       controllers.UserController.changeDetail
POST          /CloudPlatform/User/getDetail                          controllers.UserController.getDetail
GET           /CloudPlatform/User/signout                            controllers.UserController.signout
POST          /CloudPlatform/User/addUser                            controllers.UserController.addUser
POST          /CloudPlatform/User/addLike                            controllers.UserController.addLike(sid:String)
POST          /CloudPlatform/User/delLike                            controllers.UserController.deleteLike(sid:String)
POST          /CloudPlatform/User/getAllUsers                        controllers.UserController.getAllUsers
POST          /CloudPlatform/User/updateAutho                        controllers.UserController.updateAutho(uid:String,authority:String)


#test below
GET     /viewer                     controllers.HomeController.viewer
GET     /test                       controllers.HomeController.test
GET     /testlog                    controllers.HomeController.testlog
GET     /testslider                 controllers.HomeController.testSlider
GET     /testindex                  controllers.HomeController.testindex
GET     /slider                     controllers.HomeController.testperson
GET     /table                      controllers.HomeController.testtable
GET     /testsoft                   controllers.SoftController.testsoft
GET     /cynet                      controllers.SoftController.testcynet

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
